openapi: '3.0.4'
info:
  title: Shopping list and recipes API.
  description: Shopping list and recipes API.
  version: 1.0.0
servers:
  - url: http://localhost/api/v1
tags:
  - name: recipe
    description: A recipe
  - name: ingredient
    description: An ingredient in a recipe or an item in a shopping list
paths:
  /recipes:
    get:
      tags:
        - recipe
      summary: Gets recipes
      operationId: getRecipes
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": '#/components/schemas/Recipe'
  /recipes/{recipeId}/ingredients:
    get:
      tags:
        - ingredient
      summary: Gets ingredients for a recipe
      operationId: getIngredientsByRecipe
      parameters:
        - name: recipeId
          in: path
          description: ID of recipe to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": '#/components/schemas/Ingredient'
        '400':
          description: Invalid ID supplied
        '404':
          description: Recipe not found
  /shoppingitems:
    get:
      tags:
        - ingredient
      summary: Gets shopping list items
      operationId: getShoppingItems
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": '#/components/schemas/Ingredient'
components:
  schemas:
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
    Unit:
      type: string
      enum:
        - mg
        - g
        - kg
        - ml
        - l
        - lb
        - oz
        - floz
        - tsp
        - tbsp
        - cup
        - pint
    NutritionUnit:
      type: string
      enum:
        - kilojoules
        - calories
        - grams
    NutritionType:
      type: string
      enum:
        - carbohydrates
        - energy
        - protein
        - saturatedFat
        - sodium
        - sugar
        - transFat
    Conversion:
      type: object
      properties:
        fromUnit:
          "$ref": '#/components/schemas/Unit'
        toUnit:
          "$ref": '#/components/schemas/Unit'
        ratio:
          type: number
          format: double
    Ingredient:
      type: object
      required:
        - product
        - unitQuantity
      properties:
        product:
          "$ref": '#/components/schemas/Product'
        unitQuantity:
          type: integer
          format: int32
        optional:
          type: boolean
          description: 'Indicates an optional ingredient'
        note:
          "$ref": '#/components/schemas/Note'
    Instruction:
      type: object
      properties:
        text:
          type: string
          description: 'free form text which can include text substitutions for notes and ingredients'
    Note:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
          description: 'free form text which can include text substitutions for notes and ingredients'
    NutritionInfo:
      type: object
      required:
        - type
      properties:
        valueType:
          "$ref": '#/components/schemas/NutritionType'
        valueUnit:
          "$ref": '#/components/schemas/NutritionUnit'
        value:
          type: number
          format: double
        percent:
          type: number
          format: double
    Review:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        reviewerId:
          type: string
        Rating:
          type: integer
          format: int32
          description: 'from zero to ten'
        text:
          type: string
          description: 'free form text for any reviewer comments'
    RecipeType:
      type: string
      enum:
        - breakfast
        - brunch
        - dessert
        - drink
        - main
        - preserve
        - sauce
        - side
        - snack
        - starter
        - soup
        - pizza
    Cuisine:
      type: string
      enum:
        - french
        - italian
        - spanish
        - chinese
        - japanese
        - indian
        - thai
        - mexican
        - american
        - middleEastern
        - african
    RecipeTag:
      type: string
      enum:
        - dairyFree
        - glutenFree
        - nutFree
        - lowFodmap
        - keto
        - paleo
        - fish
        - beef
        - lamb
        - pork
        - goat
        - vegan
        - vegetarian
    Product:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        brand:
          type: string
        unitMeasurement:
          type: number
          format: double
        measurementUnit:
          "$ref": '#/components/schemas/Unit'
        conversions:
          "$ref": '#/components/schemas/Conversion'
        shelfLifeInDays:
          type: integer
          format: int64
    Recipe:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        creator:
          type: string
          description: 'either the individual creator or a corporate entity'
        license:
          type: string
          description: 'license details explaining how the recipe may be used'
        servings:
          type: integer
          format: int32
        prepTime:
          type: integer
          format: int32
          description: 'total preparation time in minutes'
        cookingTime:
          type: integer
          format: int32
          description: 'total cooking time in minutes'
        difficulty:
          type: integer
          format: int32
          description: 'difficulty level from 1 to 5; Beginner, Easy, Intermediate, Hard, Expert'
        type:
          "$ref": '#/components/schemas/RecipeType'
        cuisine:
          "$ref": '#/components/schemas/Cuisine'
        tags:
          type: array
          items:
            "$ref": '#/components/schemas/RecipeTag'        
        ingredients:
          type: array
          items:
            "$ref": '#/components/schemas/Ingredient'
        notes:
          type: array
          items:
            "$ref": '#/components/schemas/Note'
        nutrition:
          "$ref": '#/components/schemas/NutritionInfo'
        reviews:
          type: array
          items:
            "$ref": '#/components/schemas/Review'
